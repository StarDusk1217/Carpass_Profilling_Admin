@page "/account"
@using System.Security.Claims
@using Carpass_Profilling.Data
@using Carpass_Profilling.Models
@using Microsoft.AspNetCore.Components.Authorization
@inject UserService UserService
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject NavigationManager NavigationManager

@rendermode InteractiveServer

<style>
    /* Existing Account.razor styles */
    .container-fluid {
        max-width: 1400px;
        
    }

    .card {
        border: none;
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        margin-bottom: 2rem;
    }

    .card-header {
        background-color: #007bff;
        color: white;
        border-radius: 10px 10px 0 0;
        padding: 1rem;
    }

    .image-preview-container {
        width: 200px;
        height: 200px;
        margin: 20px auto;
        border: 3px solid #007bff;
        border-radius: 50%;
        overflow: hidden;
        position: relative;
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
    }

    .image-preview, .image-preview-placeholder {
        width: 100%;
        height: 100%;
        object-fit: cover;
    }

    .image-preview-placeholder {
        display: flex;
        align-items: center;
        justify-content: center;
        background-color: #e9ecef;
        color: #6c757d;
        font-size: 48px;
    }

    .image-label {
        position: absolute;
        bottom: 0;
        left: 0;
        right: 0;
        background-color: rgba(0,0,0,0.5);
        color: white;
        text-align: center;
        padding: 5px;
        font-size: 12px;
    }

    .form-floating > label {
        left: 0.5rem;
    }

    .admin-info {
        background-color: #f8f9fa;
        border-left: 5px solid #007bff;
        padding: 1rem;
        margin-top: 2rem;
        border-radius: 5px;
    }

    .admin-info h3 {
        color: #007bff;
        margin-bottom: 1rem;
    }

    .admin-info ul {
        padding-left: 1.5rem;
    }

    .admin-info li {
        margin-bottom: 0.5rem;
    }

    /* Modified button styles to accommodate both buttons */
    .action-buttons-container {
        display: flex;
        justify-content: flex-end;
        gap: 1rem;
        margin-top: 20px;
    }

    .create-user-btn {
        background-color: #28a745;
        color: white;
        border: none;
        padding: 10px 20px;
        border-radius: 5px;
        font-size: 16px;
        cursor: pointer;
        transition: background-color 0.3s ease;
        display: flex;
        align-items: center;
    }

    .create-user-btn:hover {
        background-color: #218838;
    }

    /* Merged styles from Lag.razor */
    .modal-overlay {
        display: flex;
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background-color: rgba(15, 23, 42, 0.65);
        backdrop-filter: blur(8px);
        justify-content: center;
        align-items: center;
        z-index: 1000;
        opacity: 0;
        visibility: hidden;
        transition: all 0.2s ease-in-out;
    }

        .modal-overlay.show {
            opacity: 1;
            visibility: visible;
        }

    .modal-container {
        background: linear-gradient(to bottom, #FFFFFF, #F8FAFC);
        border: 1px solid #E2E8F0;
        border-radius: 12px;
        box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06), 0 20px 25px -5px rgba(0, 0, 0, 0.1);
        max-width: 420px;
        width: 95%;
        transform: translateY(20px);
        opacity: 0;
        transition: all 0.3s ease-out;
    }

        .modal-container.slide-in {
            transform: translateY(0);
            opacity: 1;
        }

    .modal-header {
        padding: 1.5rem 1.5rem 0.75rem 1.5rem;
        display: flex;
        align-items: center;
        gap: 1rem;
        border-bottom: 1px solid #E2E8F0;
    }

    .modal-icon-wrapper {
        width: 42px;
        height: 42px;
        background: #FEF2F2;
        border-radius: 10px;
        display: flex;
        align-items: center;
        justify-content: center;
    }

        .modal-icon-wrapper i {
            color: #DC2626;
            font-size: 1.25rem;
        }

    .modal-title {
        flex: 1;
    }

        .modal-title h2 {
            color: #0F172A;
            font-size: 1.25rem;
            font-weight: 600;
            margin: 0;
            line-height: 1.3;
        }

        .modal-title p {
            color: #64748B;
            font-size: 0.875rem;
            margin: 0.25rem 0 0 0;
        }

    .modal-content {
        padding: 1.25rem 1.5rem;
        color: #475569;
        font-size: 0.9375rem;
        line-height: 1.5;
    }

    .modal-footer {
        padding: 1rem 1.5rem 1.5rem;
        display: flex;
        justify-content: flex-end;
        gap: 0.75rem;
        border-top: 1px solid #E2E8F0;
    }

    .btn-cancel {
        padding: 0.625rem 1rem;
        background-color: white;
        border: 1px solid #E2E8F0;
        border-radius: 8px;
        color: #475569;
        font-size: 0.875rem;
        font-weight: 500;
        transition: all 0.2s;
    }

        .btn-cancel:hover {
            background-color: #F8FAFC;
            border-color: #CBD5E1;
        }

    .btn-logout {
        padding: 0.625rem 1.25rem;
        background-color: #DC2626;
        border: 1px solid #DC2626;
        border-radius: 8px;
        color: white;
        font-size: 0.875rem;
        font-weight: 500;
        transition: all 0.2s;
    }

        .btn-logout:hover {
            background-color: #B91C1C;
            border-color: #B91C1C;
        }

    /* Loading State */
    .loading-state {
        padding: 2.5rem;
        text-align: center;
    }

    .spinner {
        width: 36px;
        height: 36px;
        border: 3px solid #E2E8F0;
        border-top-color: #DC2626;
        border-radius: 50%;
        margin: 0 auto 1rem;
        animation: spin 0.8s linear infinite;
    }

    .loading-text {
        color: #0F172A;
        font-size: 1rem;
        font-weight: 500;
    }

    .loading-subtext {
        color: #64748B;
        font-size: 0.875rem;
        margin-top: 0.25rem;
    }

    @@keyframes spin {
        to {
            transform: rotate(360deg);
        }
    }

    .edit-btn {
        background-color: #ffc107;
        color: #212529;
        border: none;
        padding: 10px 20px;
        border-radius: 5px;
        font-size: 16px;
        cursor: pointer;
        transition: background-color 0.3s ease;
        display: flex;
        align-items: center;
    }

        .edit-btn:hover {
            background-color: #e0a800;
        }

    /* Adjust the action buttons container to accommodate the new button */
    .action-buttons-container {
        display: flex;
        justify-content: flex-end;
        gap: 1rem;
        margin-top: 20px;
        flex-wrap: wrap;
    }
    
</style>

<div class="container  h-100">
    <div class="row justify-content-center ">
        <div class="col-12">
            <div class="card">
                <div class="card-header">
                    <h2 class="mb-0">User Account Information</h2>
                </div>
                <div class="card-body">
                    @if (currentUser != null)
                    {
                        <div class="row">
                            <div class="col-md-3">
                                <div class="image-preview-container">
                                    @if (currentUser.Image != null && currentUser.Image.Length > 0)
                                    {
                                        <img src="data:image/png;base64,@Convert.ToBase64String(currentUser.Image)" alt="Profile Image Preview" class="image-preview" />
                                    }
                                    else
                                    {
                                        <div class="image-preview-placeholder">
                                            <i class="bi bi-person-fill"></i>
                                        </div>
                                    }
                                    <div class="image-label">Profile Picture</div>
                                </div>
                            </div>
                            <div class="col-md-9">
                                <div class="row g-3">
                                    <div class="col-md-6">
                                        <div class="form-floating">
                                            <input type="text" class="form-control" id="name" value="@currentUser.Name" disabled />
                                            <label for="name">Full Name</label>
                                        </div>
                                    </div>
                                    <div class="col-md-6">
                                        <div class="form-floating">
                                            <input type="text" class="form-control" id="gender" value="@currentUser.Gender" disabled />
                                            <label for="gender">Gender</label>
                                        </div>
                                    </div>
                                    <div class="col-md-6">
                                        <div class="form-floating">
                                            <input type="email" class="form-control" id="email" value="@currentUser.Email" disabled />
                                            <label for="email">Email Address</label>
                                        </div>
                                    </div>
                                    <div class="col-md-6">
                                        <div class="form-floating">
                                            <input type="text" class="form-control" id="birthday" value="@currentUser.Birthday" disabled />
                                            <label for="birthday">Birthday</label>
                                        </div>
                                    </div>
                                    <div class="col-md-6">
                                        <div class="form-floating">
                                            <input type="text" class="form-control" id="role" value="@currentUser.Role" disabled />
                                            <label for="role">User Role</label>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>

                        @if (currentUser.Role == "Admin")
                        {
                            <div class="admin-info mt-4">
                                <h3>Admin Duties and Obligations</h3>
                                <p>As an administrator, I have important responsibilities in managing the system and ensuring its proper functioning. My key duties include:</p>
                                <ul>
                                    <li><strong>User Management:</strong> Create and modify applicant information as needed.</li>
                                    <li><strong>Data Integrity:</strong> Ensure the accuracy and consistency of data within the system.</li>
                                    <li><strong>Compliance:</strong> Ensure the system adheres to relevant laws, regulations, and university policies.</li>
                                    <li><strong>Reporting:</strong> Generate and analyze system reports for management and decision-making purposes.</li>
                                </ul>
                                <p><i>Remember, with great power comes great responsibility. Always act ethically and in the best interest of the organization and its users.</i></p>
                            </div>
                            <div class="action-buttons-container">
                                    <button class="edit-btn" @onclick="NavigateToEditAccount">
                                        <i class="bi bi-pencil-square me-2"></i> Edit Account
                                    </button>
                                <button class="create-user-btn" @onclick="NavigateToCreateUser">
                                    <i class="bi bi-person-plus me-2"></i> Create New User
                                </button>
                                <button class="btn btn-outline-danger" @onclick="ShowModal">
                                    <i class="bi bi-box-arrow-right me-2"></i> Log Out
                                </button>
                            </div>
                        }
                    }
                    else
                    {
                        <p>Loading user information...</p>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

<div class="modal-overlay @(_showModal ? "show" : "")" @onclick="CancelLogout">
    <div class="modal-container @(_showModal ? "slide-in" : "")" @onclick:stopPropagation>
        @if (_isLoggingOut)
        {
            <div class="loading-state">
                <div class="spinner"></div>
                <p class="loading-text">Signing out</p>
                <p class="loading-subtext">Please wait while we secure your session</p>
            </div>
        }
        else
        {
            <div class="modal-header">
                <div class="modal-icon-wrapper">
                    <i class="bi bi-box-arrow-right"></i>
                </div>
                <div class="modal-title">
                    <h2>Sign Out</h2>
                    <p>Session termination</p>
                </div>
            </div>
            <div class="modal-content">
                For security reasons, signing out will completely terminate your current session. You'll need to authenticate again to access the system.
            </div>
            <div class="modal-footer">
                <button class="btn-cancel" @onclick="CancelLogout">
                    <i class="bi bi-x me-1"></i>
                    Cancel
                </button>
                <button class="btn-logout" @onclick="ConfirmLogout">
                    <i class="bi bi-shield-lock me-1"></i>
                    Sign Out
                </button>
            </div>
        }
    </div>
</div>
@code {
    private User? currentUser;
    private bool _showModal = false;
    private bool _isLoggingOut = false;

    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        var user = authState.User;

        if (user.Identity.IsAuthenticated)
        {
            var email = user.FindFirst(ClaimTypes.Name)?.Value;
            if (email != null)
            {
                currentUser = UserService.GetUserByEmail(email);
            }
        }
    }

    private void NavigateToEditAccount()
    {
        NavigationManager.NavigateTo("/editaccount");
    }

    private void NavigateToCreateUser()
    {
        NavigationManager.NavigateTo("/create");
    }

    private void ShowModal()
    {
        _showModal = true;
    }

    private void CancelLogout()
    {
        _showModal = false;
        _isLoggingOut = false;
    }

    private async Task ConfirmLogout()
    {
        _isLoggingOut = true;
        StateHasChanged();
        await Task.Delay(2000);
        NavigationManager.NavigateTo("/logout");
    }
}