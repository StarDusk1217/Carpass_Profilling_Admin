@page "/applicants"
@inject IApplicantService ApplicantService
@inject IPendingService PendingService
@inject NavigationManager NavigationManager
@rendermode @(new InteractiveServerRenderMode(prerender: false))

<style>
    body {
        color: white;
    }

    .header-container {
        display: flex;
        align-items: center;
        justify-content: space-between;
    }

    .applicant-count {
        color: greenyellow;
        font-size: 18px;
        font-weight: bold;
    }

    .table-container {
        margin-top: 20px;
        width: 100%;
        border-radius: 8px; /* Add border radius for rounded corners */
    }

    .scrollable-table {
        max-height: 450px; /* Adjust this value as needed */
        overflow-y: auto;
        overflow-x: auto;
    }

    .table {
        width: 100%;
        border-collapse: collapse;
        background-color: white; /* Add background color */
        border: 1px solid white; /* Add white border */
        box-shadow:  2px 2px 10px white; /* Add box shadow */
    }

        .table th, .table td {
            padding: 10px;
            text-align: left;
        }

        .table th {
            background-color: #FCC60C;
            color: #203354;
            position: sticky;
            top: 0;
            z-index: 1;
        }

        .table td {
            color: #e0e0e0;
            font-weight: bold;
        }

        .table tr:nth-child(even) {
            background-color: #25337a;
        }

        .table tr:nth-child(odd) {
            background-color: #333399;
        }

    .input-group {
        margin-top: 20px;
    }

    .form-control {
        color: #333;
    }

    .btn-primary, .btn-success, .btn-warning, .btn-danger {
        margin: 2px;
    }

    .text-center {
        margin-top: 20px;
    }

    .modal-content {
        color: black;
    }

    .input-group {
        margin-top: 0px;
    }

    .document-list {
        list-style: none;
        padding: 0;
    }

        .document-list li {
            display: flex;
            align-items: center;
            margin-bottom: 10px;
        }

        .document-list input[type="checkbox"] {
            margin-right: 10px;
        }

    .modal-header .btn-close {
        background: none;
        border: none;
        font-size: 1.5rem;
    }
</style>


<div class="header-container">
    <h3>Applicant Overview</h3>
    <span class="applicant-count">Total No. of Applicant: @applicants.Count</span>
</div>

@if (applicants.Count == 0)
{
    <div class="text-center">
        <button class="btn btn-primary mt-3" @onclick="AddApplicant">Add New Applicant</button>
    </div>
}
else
{
    <div class="input-group">
        <input type="text" @bind="searchTerm" @bind:event="oninput" placeholder="Search applicants by name, vehicle details, or date..." class="form-control" />
    </div>
    <div class="table-container">
        <div class="scrollable-table">
            <table class="table table-striped table-hover">
                <thead>
                    <tr>
                        <th style="min-width: 50px;">ID</th>
                        <th style="min-width: 150px;">Full Name</th>
                        <th style="min-width: 150px;">Vehicle Owner Name</th>
                        <th style="min-width: 150px;">Car Pass</th>
                        <th style="min-width: 100px;">Plate No</th>
                        <th style="min-width: 100px;">Brand</th>
                        <th style="min-width: 150px;">Facefile Date</th>
                        <th style="min-width: 150px;">Actions</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var app in filteredApplicants)
                    {
                        <tr>
                            <td>@app.kiosk_Id</td>
                            <td>@app.fullName</td>
                            <td>@app.ve_Owner</td>
                            <td>@app.type_Carpass</td>
                            <td>@app.ve_PlateNO</td>
                            <td>@app.ve_Brand</td>
                            <td>@app.facefile_Date?.ToString("yyyy-MM-dd")</td>
                            <td>
                                <div class="btn-group">
                                    <button class="btn btn-primary btn-sm" @onclick="@(() => ViewApplicant(app.kiosk_Id))">View</button>
                                    <button class="btn btn-success btn-sm" @onclick="@(() => ApproveApplicant(app.kiosk_Id))">Approve</button>
                                    <button class="btn btn-warning btn-sm" @onclick="@(() => EditApplicant(app.kiosk_Id))">Edit</button>
                                    <button class="btn btn-danger btn-sm" @onclick="@(() => DeleteApplicant(app.kiosk_Id))">Delete</button>
                                </div>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
    <p></p>
    <div class="text-left">
        <button class="btn btn-primary" @onclick="AddApplicant">
            <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-plus me-2" viewBox="0 0 16 16">
                <path d="M8 1.5a.5.5 0 0 1 .5.5v5.5H14a.5.5 0 0 1 0 1H8.5V14a.5.5 0 0 1-1 0V8H2a.5.5 0 0 1 0-1h5.5V2a.5.5 0 0 1 .5-.5z" />
            </svg>
            Add New Applicant
        </button>
    </div>
}

@if (isViewApplicantModalOpen)
{
    <div class="modal show" tabindex="-1" style="display: block;">
        <div class="modal-dialog modal-lg">
            <div class="modal-content bg-light text-dark">
                <div class="modal-header border-0">
                    <h5 class="modal-title text-black">Applicant Details</h5>
                    <button type="button" class="btn-close " @onclick="CloseViewApplicantModal"></button>
                </div>
                <div class="modal-body">
                    <div class="container">
                        <div class="row">
                            <div class="col">
                                <p><strong>Full Name:</strong> @selectedApplicant?.fullName</p>
                                <p><strong>Type of Applicant:</strong> @selectedApplicant?.type_Applicant</p>
                                <p><strong>Type of Car Pass:</strong> @selectedApplicant?.type_Carpass</p>
                                <p><strong>Name of Student:</strong> @selectedApplicant?.name_Student</p>
                                <p><strong>Course/Grade & Level:</strong> @selectedApplicant?.course_Grade</p>
                                <p><strong>Relationship with Student/Pupil:</strong> @selectedApplicant?.app_Relation</p>
                                <p><strong>Home Address:</strong> @selectedApplicant?.home_Ad</p>
                                <p><strong>Contact:</strong> @selectedApplicant?.app_Contact</p>
                            </div>
                            <div class="col">
                                <p><strong>Vehicle Owner Name:</strong> @selectedApplicant?.ve_Owner</p>
                                <p><strong>Vehicle Relationship to Applicant:</strong> @selectedApplicant?.ve_Relation</p>
                                <p><strong>Plate No:</strong> @selectedApplicant?.ve_PlateNO</p>
                                <p><strong>Brand:</strong> @selectedApplicant?.ve_Brand</p>
                                <p><strong>Type:</strong> @selectedApplicant?.ve_Type</p>
                                <p><strong>Series:</strong> @selectedApplicant?.ve_Series</p>
                                <p><strong>Color:</strong> @selectedApplicant?.ve_Color</p>
                                <p><strong>School Year:</strong> @selectedApplicant?.schoolyear</p>
                                <p><strong>Facefile Date:</strong> @selectedApplicant?.facefile_Date?.ToString("yyyy-MM-dd")</p>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="modal-footer border-0">
                    <button type="button" class="btn btn-secondary" @onclick="CloseViewApplicantModal">Close</button>
                </div>
            </div>
        </div>
    </div>
}

@if (isApproveModalOpen)
{
    <div class="modal show" tabindex="-1" style="display: block;">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h3 class="modal-title">Confirm Required Documents Submission</h3>
                    <button type="button" class="btn-close" @onclick="CloseApproveModal"></button>
                </div>
                <div class="modal-body">
                    <p>Have the following required documents been submitted face to face?</p>
                    <ul class="document-list">
                        <li>
                            <input type="checkbox" id="doc1" @bind="isDoc1Submitted">
                            <label for="doc1">Photocopy of Vehicle's LTO Official Receipt (OR)</label>
                        </li>
                        <li>
                            <input type="checkbox" id="doc2" @bind="isDoc2Submitted">
                            <label for="doc2">Photocopy of Vehicle's LTO Certificate of Registration (CR)</label>
                        </li>
                        <li>
                            <input type="checkbox" id="doc3" @bind="isDoc3Submitted">
                            <label for="doc3">Photocopy of Driver's License</label>
                        </li>
                        <li>
                            <input type="checkbox" id="doc4" @bind="isDoc4Submitted">
                            <label for="doc4">Photocopy of Affidavit of Undertaking or Proof of Ownership of Vehicle</label>
                        </li>
                        <li>
                            <input type="checkbox" id="doc5" @bind="isDoc5Submitted">
                            <label for="doc5">Photocopy of Student's Current Registration Form (RF)</label>
                        </li>
                        <li>
                            <input type="checkbox" id="doc6" @bind="isDoc6Submitted">
                            <label for="doc6">Photocopy of Student's Identification Card</label>
                        </li>
                        <li>
                            <input type="checkbox" id="doc7" @bind="isDoc7Submitted">
                            <label for="doc7">Photo of Endorsement from Mr. Ernie Solatorio</label>
                        </li>
                    </ul>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-primary" @onclick="ConfirmApproveApplicant">Save</button>
                    <button type="button" class="btn btn-secondary" @onclick="CloseApproveModal">Cancel</button>
                </div>
            </div>
        </div>
    </div>
}


@if (isDeleteModalOpen)
{
    <div class="modal show" tabindex="-1" style="display: block;">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Confirm Deletion</h5>
                    <button type="button" class="btn-close" @onclick="CloseDeleteModal"></button>
                </div>
                <div class="modal-body">
                    <p>Are you sure you want to delete this applicant?</p>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-danger" @onclick="ConfirmDeleteApplicant">Confirm</button>
                    <button type="button" class="btn btn-secondary" @onclick="CloseDeleteModal">Cancel</button>
                </div>
            </div>
        </div>
    </div>
}



@code {
    List<Applicant> applicants = new List<Applicant>();
    private string searchTerm = "";
    private bool isViewApplicantModalOpen = false;
    private bool isApproveModalOpen = false;
    private int selectedApplicantId;
    private Applicant selectedApplicant;
    private bool isDeleteModalOpen = false;
    private int applicantToDeleteId;
    private bool isDoc1Submitted = false;
    private bool isDoc2Submitted = false;
    private bool isDoc3Submitted = false;
    private bool isDoc4Submitted = false;
    private bool isDoc5Submitted = false;
    private bool isDoc6Submitted = false;
    private bool isDoc7Submitted = false;



    protected override async Task OnInitializedAsync()
    {

        await Task.Delay(500);
        applicants = await ApplicantService.GetAllApplicantsAsync();
    }

    private IEnumerable<Applicant> filteredApplicants =>
        string.IsNullOrWhiteSpace(searchTerm) ? applicants : applicants.Where(a =>
            (a.fullName?.Contains(searchTerm, StringComparison.OrdinalIgnoreCase) ?? false) ||
            (a.type_Carpass?.Contains(searchTerm, StringComparison.OrdinalIgnoreCase) ?? false) ||
            (a.ve_Owner?.Contains(searchTerm, StringComparison.OrdinalIgnoreCase) ?? false) ||
            (a.ve_PlateNO?.Contains(searchTerm, StringComparison.OrdinalIgnoreCase) ?? false) ||
            (a.ve_Brand?.Contains(searchTerm, StringComparison.OrdinalIgnoreCase) ?? false) ||
            (a.ve_Color?.Contains(searchTerm, StringComparison.OrdinalIgnoreCase) ?? false) ||
            (a.facefile_Date?.ToString("yyyy-MM-dd").Contains(searchTerm, StringComparison.OrdinalIgnoreCase) ?? false));

    void EditApplicant(int id)
    {
        var applicant = applicants.FirstOrDefault(a => a.kiosk_Id == id);
        if (applicant != null)
        {
            // List of applicant types that should navigate to edit-applicant
            var applicantTypesForEditApplicant = new List<string>
        {
            "Parents of CPU Student",
            "Guardian of CPU Student",
            "CPU Student",
            "CPU Tenant",
            "Other"
        };

            // List of applicant types that should navigate to edit-faculty
            var applicantTypesForEditFaculty = new List<string>
        {
            "1st Vehicle Pass (Free)",
            "2nd Vehicle Pass",
            "3rd Vehicle Pass",
            "4th Vehicle Pass"
        };

            if (applicantTypesForEditApplicant.Contains(applicant.type_Applicant))
            {
                NavigationManager.NavigateTo($"/edit-applicant/{id}");
            }
            else if (applicantTypesForEditFaculty.Contains(applicant.type_Applicant))
            {
                NavigationManager.NavigateTo($"/edit-faculty/{id}");
            }
            else
            {
                // Handle other types or show an error message
                Console.WriteLine("Unknown applicant type.");
            }
        }
    }


    void AddApplicant()
    {
        NavigationManager.NavigateTo("/edit-applicant");
    }
    void DeleteApplicant(int id)
    {
        applicantToDeleteId = id;
        isDeleteModalOpen = true;
    }

    async Task ApproveApplicant(int applicantId)
    {
        selectedApplicantId = applicantId;
        var applicant = await ApplicantService.GetApplicantsByIdAsync(selectedApplicantId);
        if (applicant != null)
        {
            // Check if each document has data and set the checkbox states
            isDoc1Submitted = applicant.Doc1 != null && applicant.Doc1.Length > 0;
            isDoc2Submitted = applicant.Doc2 != null && applicant.Doc2.Length > 0;
            isDoc3Submitted = applicant.Doc3 != null && applicant.Doc3.Length > 0;
            isDoc4Submitted = applicant.Doc4 != null && applicant.Doc4.Length > 0;
            isDoc5Submitted = applicant.Doc5 != null && applicant.Doc5.Length > 0;
            isDoc6Submitted = applicant.Doc6 != null && applicant.Doc6.Length > 0;
            isDoc7Submitted = applicant.Doc7 != null && applicant.Doc7.Length > 0;
        }
        isApproveModalOpen = true;
    }


    async Task ConfirmApproveApplicant()
    {
        var applicant = await ApplicantService.GetApplicantsByIdAsync(selectedApplicantId);
        if (applicant != null)
        {
            var pending = new Pending
                {
                    fullName = applicant.fullName,
                    type_Applicant = applicant.type_Applicant,
                    type_Carpass = applicant.type_Carpass,
                    name_Student = applicant.name_Student,
                    course_Grade = applicant.course_Grade,
                    app_Relation = applicant.app_Relation,
                    home_Ad = applicant.home_Ad,
                    app_Contact = applicant.app_Contact,
                    ve_Owner = applicant.ve_Owner,
                    ve_Relation = applicant.ve_Relation,
                    ve_PlateNO = applicant.ve_PlateNO,
                    ve_Brand = applicant.ve_Brand,
                    ve_Type = applicant.ve_Type,
                    ve_Series = applicant.ve_Series,
                    ve_Color = applicant.ve_Color,
                    facefile_Date = applicant.facefile_Date,
                    schoolyear = applicant.schoolyear, // Ensure schoolyear is included
                    IsDoc1Submitted = isDoc1Submitted,
                    IsDoc2Submitted = isDoc2Submitted,
                    IsDoc3Submitted = isDoc3Submitted,
                    IsDoc4Submitted = isDoc4Submitted,
                    IsDoc5Submitted = isDoc5Submitted,
                    IsDoc6Submitted = isDoc6Submitted,
                    IsDoc7Submitted = isDoc7Submitted,
                    Doc1 = applicant.Doc1,
                    Doc2 = applicant.Doc2,
                    Doc3 = applicant.Doc3,
                    Doc4 = applicant.Doc4,
                    Doc5 = applicant.Doc5,
                    Doc6 = applicant.Doc6,
                    Doc7 = applicant.Doc7
                };
            await PendingService.AddPendingsAsync(pending);
            await ApplicantService.DeleteApplicantsAsync(selectedApplicantId);

            applicants = await ApplicantService.GetAllApplicantsAsync();
        }
        isApproveModalOpen = false;
    }

    private void CloseApproveModal()
    {
        isApproveModalOpen = false;
    }

    void ViewApplicant(int id)
    {
        selectedApplicant = applicants.FirstOrDefault(a => a.kiosk_Id == id);
        isViewApplicantModalOpen = true;
    }

    void CloseViewApplicantModal()
    {
        isViewApplicantModalOpen = false;
        selectedApplicant = null;
    }

    void SearchApplicants()
    {
    }

    async Task ConfirmDeleteApplicant()
    {
        await ApplicantService.DeleteApplicantsAsync(applicantToDeleteId);
        applicants = await ApplicantService.GetAllApplicantsAsync();
        CloseDeleteModal();
    }

    void CloseDeleteModal()
    {
        isDeleteModalOpen = false;
        applicantToDeleteId = 0;
    }



}
